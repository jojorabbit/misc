Icons - 512x512 png
AndroidAssetStudio - can be used to generate icons

Before start create JAVA_HOME enviromental variable an appenf path variabe in same screen
check output of java --version and javac
Genymotion - alternative ADV
more info for win and mac
https://www.udemy.com/complete-android-developer-course


// Layouts
Vertical Linear 
Horizontal
Relative Layout
Grid Layout

// Dimentions  
dimention.xml  		// keeps all dimentions in one place
strings.xml 		// keeps all strings(For lables, buttons, etc ...) in one file
					can have a multiple strings folders/files for different languages

40dp 				// dencity independent pixels. So it will scale depend on screen dencity
40sp				// scale independent pixels - use with fonts


Toast.makeText(this, yourNoResponse, Toast.LENGTH_LONG).show();		// pop up message
Toast.mekeText(getApplicationContext(), "Enter a value", Toast.LENGTH_LONG).show();

// log into console
Log.i();	// informational log, to display into logcat

// MVC paterns

// Activities - Controllers
// Layouts/XMLs - Views


// Control ids
android:id = "@+id/control_name" 		// + indicates that this is a new id
android:layout_below = "@+id/textView" 	// put this button below textView
android:hint="enter your name"			// text pleceholder

EditText myEditText = (EditText) findViewById(R.id.myEditText);
myEditText.getText();


// limit decimal points
DecimalFormat round = new DecimalFormat("0.0");		// format to one decimal
//cast to string
String stringResult = String.valueOf(round.format(doubleValue)); 

// activities and intents
// on first activity
Intent intent = new Intent(MainActivity.this, SecondActivity.class);
intent.putExtra("key", value);

startActivity(intent);
startActivityForResult(intent, REQUEST_CODE);	// REQUEST_CODE = 1

protected void onActivityResult(int requestCode, int resultCode, Intent data){
	if(requestCode == REQUEST_CODE){
		if(resultCode == RESULT_OK){
			String result = data.getStringExtra("returnData");
		}
	}
}

// on second activity
Bundle extras = getIntent().getExtras();
String str = extras.getString('key'); 

Intent returnIntent = getIntent();
returnIntent = ('returnIntent', 'from second activity');
setResult(RESULT_OK, returnIntent);
finish();


// ListViews 

final String[] values = new String[]{
        "List 1",
        "List 2",
        "List 3",
        "List 4",
        "List 5"};

ArrayAdapter<String> adapter = new ArrayAdapter<String>(getApplicationContext(),
        android.R.layout.simple_list_item_1, android.R.id.text1, values);
listView.setAdapter(adapter);


// STORAGE
// shared preferences

// to store
 SharedPreferences myPrefs = getSharedPreferences(PREFS_NAME, 0);
 SharedPreferences.Editor editor = myPrefs.edit();
 editor.putString("name", name.getText().toString());
 editor.commit();    // very important to commit

 // to access
 SharedPreferences prefs = getSharedPreferences(PREFS_NAME, 0);
if (prefs.contains("name")) {
    String userName = prefs.getString("name", "not found");
    showNameText.setText("You are " + userName);
} 


// Save on device, text file

// write
private void writeToFile(String myData) {
    try {
        OutputStreamWriter outputStreamWriter = new OutputStreamWriter(openFileOutput("diary.txt"), Context.MODE_PRIVATE);
        outputStreamWriter.write(myData);
        outputStreamWriter.close();     // always close your streams
    } catch (IOException e) {
        Log.e("MyActivity", e.toString());
    }
}

// read

private String readFromFile() {
    String result = "";

    try {
        InputStream inputStream = openFileInput("diary.txt");
        if (inputStream != null) {
            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);

            String tempString = "";
            StringBuilder stringBuilder = new StringBuilder();

            while ( (tempString = bufferedReader.readLine() ) != null) {
                stringBuilder.append(tempString);
            }

            inputStream.close();
            result = stringBuilder.toString();
        }
    } catch(FileNotFoundException e) {
        Log.v("MyActivity", "file not found "+e.toString());
    } catch (IOException e) {
        e.printStackTrace();
    }

    return result;
}